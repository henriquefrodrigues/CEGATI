---
- name: Instalar e configurar GLPI com Docker no Debian 12
  hosts: servidores
  become: yes
  vars:
    db_root_password: "root_password"
    db_name: "glpi_db"
    db_user: "glpi_user"
    db_password: "glpi_password"
    glpi_port: 8081  # Porta onde o GLPI será exposto
  tasks:
    - name: Atualizar pacotes do sistema
      apt:
        update_cache: yes

    - name: Instalar dependências necessárias
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present

    - name: Adicionar chave GPG do Docker
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present

    - name: Adicionar repositório Docker
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        state: present

    - name: Instalar Docker e Docker Compose
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present

    - name: Iniciar e habilitar o serviço Docker
      service:
        name: docker
        state: started
        enabled: yes

    - name: Criar diretório para o Docker Compose
      file:
        path: /opt/glpi
        state: directory
        mode: '0755'

    - name: Criar arquivo Docker Compose para GLPI e MySQL
      copy:
        dest: /opt/glpi/docker-compose.yml
        content: |
          version: '3.3'
          services:
            db:
              image: mysql:5.7
              volumes:
                - db_data:/var/lib/mysql
              restart: always
              environment:
                MYSQL_ROOT_PASSWORD: "{{ db_root_password }}"
                MYSQL_DATABASE: "{{ db_name }}"
                MYSQL_USER: "{{ db_user }}"
                MYSQL_PASSWORD: "{{ db_password }}"

            glpi:
              depends_on:
                - db
              image: diouxx/glpi
              volumes:
                - glpi_data:/var/www/html
              ports:
                - "{{ glpi_port }}:80"
              restart: always
              environment:
                GLPI_DB_HOST: db
                GLPI_DB_NAME: "{{ db_name }}"
                GLPI_DB_USER: "{{ db_user }}"
                GLPI_DB_PASSWORD: "{{ db_password }}"
          volumes:
            db_data: {}
            glpi_data: {}

    - name: Subir os contêineres com Docker Compose
      command: docker compose up -d
      args:
        chdir: /opt/glpi

    - name: Verificar se os contêineres estão rodando
      shell: docker ps
      register: docker_ps_output

    - name: Mostrar o estado dos contêineres
      debug:
        var: docker_ps_output.stdout
